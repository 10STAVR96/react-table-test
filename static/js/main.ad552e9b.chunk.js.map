{"version":3,"sources":["components/Header/Header.js","components/TableCell/TableCell.js","utils/utils.js","components/TableColumn/TableColumn.js","components/Table/Table.js","components/Filter/Filter.js","components/TableNav/TableNav.js","components/SelectedUserInfo/SelectedUserInfo.js","components/Main/Main.js","components/Preloader/Preloader.js","components/PopupWithForm/PopupWithForm.js","utils/formValidator.js","utils/MainApi.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","props","handleGetSmallData","handleGetLargeData","isDisableButton","handleAddTableCell","className","onClick","type","disabled","TableCell","data","handleClickTableCell","id","firstName","lastName","email","phone","TABLE_COLUMNS","label","Number","sortMethod","String","defaultMethod","ascMethod","descMethod","TableColumn","handleSortColumn","column","arrowDirection","viewBox","points","Table","dataList","pagination","columns","indexOfLastData","currentPage","itemsPerPage","indexOfFirstData","currentDataList","slice","map","index","Filter","handleFilter","filterRef","React","useRef","onSubmit","evt","preventDefault","value","current","ref","maxLength","minLength","required","placeholder","TableNav","handleClickNav","activeNum","pageNumbers","i","Math","ceil","length","push","number","SelectedUserInfo","selectedCell","description","address","readOnly","maxRows","streetAddress","city","state","zip","Main","Preloader","isSuccess","errorMessage","message","PopupWithForm","isOpen","onClose","handleSubmitPopupWithForm","validate","useState","values","setValues","errors","setErrors","isValid","setIsValid","resetForm","useCallback","newErrors","newIsValid","handleChange","event","target","name","validationMessage","closest","checkValidity","useFormWithValidation","handleClose","setTimeout","useEffect","document","addEventListener","e","key","classList","contains","htmlFor","onChange","pattern","BASE_URL","App","setDataList","setIsDisableButton","isPopupOpened","setIsPopupOpened","setActiveNum","setPagination","setSelectedCell","isPreload","setIsPreload","setIsSuccess","setErrorMessage","setColumns","startPreload","incomingError","err","console","log","incomingData","newPagination","defautStateSettings","fetch","method","headers","then","res","ok","json","Promise","reject","status","catch","obj","currentSortMethod","changeColumn","item","sortedData","sortedDataList","num","some","sort","a","b","localeCompare","sortDataList","filter","Object","toString","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad552e9b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props) {\r\n  const { handleGetSmallData, handleGetLargeData, isDisableButton, handleAddTableCell } = props;\r\n\r\n  return (\r\n    <header className='header'>\r\n      <button \r\n        onClick={handleGetSmallData}\r\n        className={`header__button ${isDisableButton ? 'header__button_disabled' : ''}`}\r\n        type='button'\r\n        disabled={isDisableButton ? true : false}\r\n      >Загрузить небольшой объем данных</button>\r\n      <button\r\n        onClick={handleGetLargeData}\r\n        className={`header__button ${isDisableButton ? 'header__button_disabled' : ''}`}\r\n        type='button'\r\n        disabled={isDisableButton ? true : false}\r\n      >Загрузить большой объем данных</button>\r\n      <button\r\n        onClick={handleAddTableCell}\r\n        className={`header__button ${isDisableButton ? 'header__button_disabled' : ''}`}\r\n        type='button'\r\n        disabled={isDisableButton ? true : false}\r\n      >Добавить</button>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction TableCell(props) {\r\n  const { data, handleClickTableCell } = props;\r\n\r\n  function handleClickItem() {\r\n    handleClickTableCell(data);\r\n  }\r\n\r\n  return (\r\n    <tr onClick={handleClickItem} className='table__item'>\r\n      <td className='table__item-cell'>{data.id}</td>\r\n      <td className='table__item-cell'>{data.firstName}</td>\r\n      <td className='table__item-cell'>{data.lastName}</td>\r\n      <td className='table__item-cell'>{data.email}</td>\r\n      <td className='table__item-cell'>{data.phone}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default TableCell;","export const TABLE_COLUMNS = [\r\n  {\r\n    label: 'id',\r\n    type: Number,\r\n    sortMethod: 'default',\r\n  },\r\n  {\r\n    label: 'firstName',\r\n    type: String,\r\n    sortMethod: 'default',\r\n  },\r\n  {\r\n    label: 'lastName',\r\n    type: String,\r\n    sortMethod: 'default',\r\n  },\r\n  {\r\n    label: 'email',\r\n    type: String,\r\n    sortMethod: 'default',\r\n  },\r\n  {\r\n    label: 'phone',\r\n    type: String,\r\n    sortMethod: 'default',\r\n  },\r\n];\r\nexport const defaultMethod = 'default';\r\nexport const ascMethod = 'asc';\r\nexport const descMethod = 'desc';","import React from 'react';\r\nimport { descMethod } from '../../utils/utils';\r\nimport '../Table/Table.css';\r\n\r\nfunction TableColumn(props) {\r\n  const { handleSortColumn, column, id } = props;\r\n  const arrowDirection = column.sortMethod !== descMethod ? 'table__arrow_rotate_top' : 'table__arrow_rotate_bottom';\r\n\r\n  function handleClick() {\r\n    handleSortColumn(column, id);\r\n  }\r\n  \r\n  return (\r\n    <th onClick={handleClick} className='table__item-header'>\r\n      {column.label}\r\n      <svg className={`table__arrow ${arrowDirection}`} viewBox=\"0 0 100 85\">\r\n        <polygon points=\"58.263,0.056 100,41.85 58.263,83.641 30.662,83.641 62.438,51.866 0,51.866 0,31.611 62.213,31.611 30.605,0 58.263,0.056\" />\r\n      </svg>\r\n    </th>\r\n  );\r\n}\r\n\r\nexport default TableColumn;","import React from 'react';\r\nimport './Table.css';\r\nimport TableCell from '../TableCell/TableCell';\r\nimport TableColumn from '../TableColumn/TableColumn';\r\n\r\nfunction Table(props) {\r\n  const { dataList, pagination, handleClickTableCell, handleSortColumn, columns } = props;\r\n  const indexOfLastData = pagination.currentPage * pagination.itemsPerPage;\r\n  const indexOfFirstData = indexOfLastData - pagination.itemsPerPage;\r\n  const currentDataList = dataList.slice(indexOfFirstData, indexOfLastData);\r\n\r\n  return (\r\n    <table className='table'>\r\n      <thead>\r\n        <tr className='table__item'>\r\n          {columns.map((column, index) => (\r\n            <TableColumn key={index} id={index} column={column} handleSortColumn={handleSortColumn} />\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {currentDataList.map((data, index) => (\r\n          <TableCell key={index} data={data} handleClickTableCell={handleClickTableCell} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\nimport './Filter.css';\r\n\r\nfunction Filter(props) {\r\n  const { handleFilter } = props;\r\n  const filterRef = React.useRef();\r\n\r\n  function handleFilterSubmit(evt) {\r\n    evt.preventDefault();\r\n    const value = filterRef.current.value;\r\n    handleFilter(value);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleFilterSubmit} className='filter'>\r\n      <h3 className='filter__header'>Фильтр</h3>\r\n      <input\r\n        ref={filterRef}\r\n        className='filter__input'\r\n        type='text'\r\n        maxLength='100'\r\n        minLength='1'\r\n        required\r\n        placeholder='ключевые слова или текст'\r\n      />\r\n      <button className='filter__submit' type='submit'>Найти</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport './TableNav.css';\r\n\r\nfunction TableNav(props) {\r\n  const { handleClickNav, dataList, pagination, activeNum } = props;\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(dataList.length / pagination.itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav className='table-nav'>\r\n      <ul className='table-nav__list'>\r\n        {pageNumbers.map((number) => {\r\n          return (\r\n          <li\r\n            key={number}\r\n            id={number}\r\n            onClick={handleClickNav}\r\n            className={`table-nav__item ${(number === activeNum) ? 'table-nav__item_active' : ''}`}\r\n          >\r\n            {number}\r\n          </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default TableNav;","import React from 'react';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport './SelectedUserInfo.css';\r\n\r\nfunction SelectedUserInfo(props) {\r\n  const { selectedCell } = props;\r\n  const { firstName, lastName, description, address } = selectedCell;\r\n\r\n  return (\r\n    <div className='user-info'>\r\n      <span className='user-info__text'>Выбран пользователь <b>{firstName || ''} {lastName || ''}</b></span>\r\n      <span className='user-info__text'>Описание:</span>\r\n      <TextareaAutosize className='user-info__description' value={description || ''} readOnly maxRows={20} />\r\n      <span className='user-info__text'>Адрес проживания: <b>{address?.streetAddress || ''}</b></span>\r\n      <span className='user-info__text'>Город: <b>{address?.city || ''}</b></span>\r\n      <span className='user-info__text'>Провинция/штат: <b>{address?.state || ''}</b></span>\r\n      <span className='user-info__text'>Индекс: <b>{address?.zip || ''}</b></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectedUserInfo;","import React from 'react';\r\nimport './Main.css';\r\nimport Table from '../Table/Table';\r\nimport Filter from '../Filter/Filter';\r\nimport TableNav from '../TableNav/TableNav';\r\nimport SelectedUserInfo from '../SelectedUserInfo/SelectedUserInfo';\r\n\r\nfunction Main(props) {\r\n  const { \r\n    dataList, \r\n    activeNum, \r\n    handleClickNav, \r\n    pagination, \r\n    selectedCell, \r\n    handleClickTableCell,\r\n    handleSortColumn,\r\n    handleFilter,\r\n    columns,\r\n  } = props;\r\n\r\n  return (\r\n    <main className='main'>\r\n      <Table \r\n        dataList={dataList}\r\n        pagination={pagination}\r\n        handleClickTableCell={handleClickTableCell}\r\n        handleSortColumn={handleSortColumn}\r\n        columns={columns}\r\n      />\r\n      <TableNav \r\n        handleClickNav={handleClickNav}\r\n        dataList={dataList}\r\n        pagination={pagination}\r\n        activeNum={activeNum}\r\n      />\r\n      <div className='main__table-block'>\r\n        <SelectedUserInfo selectedCell={selectedCell} />\r\n        <Filter handleFilter={handleFilter} />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './Preloader.css';\r\n\r\nfunction Preloader(props) {\r\n  const { isSuccess, errorMessage } = props;\r\n  const message = isSuccess ? 'Идет получение данных...' : 'Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз';\r\n  const errorText = 'К сожалению по вашему запросу ничего не найдено.';\r\n\r\n  return (\r\n    <div className=\"preloader\">\r\n      <i className={(isSuccess) ? \"preloader__icon\" : \"not-found-icon\"}></i>\r\n      {(isSuccess) ? '' : <h4 className=\"preloader__title\">Ничего не найдено</h4>}\r\n      <p className=\"preloader__message\">{errorMessage ? errorText : message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport './PopupWithForm.css';\r\nimport { useFormWithValidation } from '../../utils/formValidator';\r\n\r\nfunction PopupWithForm(props) {\r\n  const { isOpen, onClose, handleSubmitPopupWithForm } = props;\r\n\r\n  const validate = useFormWithValidation();\r\n\r\n  function handleClose() {\r\n    onClose();\r\n    setTimeout(() => validate.resetForm(), 300);\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const values = {\r\n      id: validate.values.id,\r\n      firstName: validate.values.firstName,\r\n      lastName: validate.values.lastName,\r\n      email: validate.values.email,\r\n      phone: validate.values.phone,\r\n    };\r\n    handleSubmitPopupWithForm(values);\r\n    handleClose();\r\n  }\r\n  function handleCloseByBackground(e) {\r\n    if (e.target.classList.contains('popup')) {\r\n      handleClose();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Escape' && isOpen) {\r\n        handleClose();\r\n      }\r\n    });\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <div onClick={handleCloseByBackground} className={`popup ${(isOpen) ? 'popup_opened' : ''}`}>\r\n      <form onSubmit={handleSubmit} id='popupWithForm' className='popup__container'>\r\n        <button onClick={handleClose} className='popup__close' type='button'></button>\r\n        <h2 className='popup__title'>Добавление ряда</h2>\r\n        <label className='popup__input-title' htmlFor='id'>Id</label>\r\n        <input\r\n          onChange={validate.handleChange}\r\n          id='id'\r\n          className={`popup__input ${(validate.errors.id) ? 'popup__input_type_error' : ''}`}\r\n          type='text'\r\n          name='id' \r\n          minLength='1' \r\n          maxLength='10' \r\n          required\r\n          value={validate.values.id || ''}\r\n          placeholder='Введите id'\r\n          pattern='[0-9]{1,10}'\r\n        />\r\n        <span className={`popup__input-error ${(validate.errors.id) ? 'popup__input-error_visible' : ''}`} id=\"id-error\">Неправильный формат id</span>\r\n        <label className='popup__input-title' htmlFor='firstName'>First name</label>\r\n        <input\r\n          onChange={validate.handleChange}\r\n          id='firstName'\r\n          className='popup__input'\r\n          type='text'\r\n          name='firstName'\r\n          minLength='1'\r\n          maxLength='30'\r\n          required\r\n          value={validate.values.firstName || ''}\r\n          placeholder='Введите имя'\r\n          pattern='[A-Za-z]{1,30}'\r\n        />\r\n        <span className={`popup__input-error ${(validate.errors.firstName) ? 'popup__input-error_visible' : ''}`} id=\"firstName-error\">Неправильный формат имени</span>\r\n        <label className='popup__input-title' htmlFor='lastName'>Last name</label>\r\n        <input\r\n          onChange={validate.handleChange}\r\n          id='lastName'\r\n          className='popup__input'\r\n          type='text'\r\n          name='lastName'\r\n          minLength='1'\r\n          maxLength='30'\r\n          required\r\n          value={validate.values.lastName || ''}\r\n          placeholder='Введите фамилию'\r\n          pattern='[A-Za-z]{1,30}'\r\n        />\r\n        <span className={`popup__input-error ${(validate.errors.lastName) ? 'popup__input-error_visible' : ''}`} id=\"lastName-error\">Неправильный формат фамилии</span>\r\n        <label className='popup__input-title' htmlFor='email'>Email</label>\r\n        <input\r\n          onChange={validate.handleChange}\r\n          id='email'\r\n          className='popup__input'\r\n          type='email'\r\n          name='email'\r\n          minLength='1'\r\n          maxLength='60'\r\n          required\r\n          value={validate.values.email || ''}\r\n          placeholder='Введите email'\r\n        />\r\n        <span className={`popup__input-error ${(validate.errors.email) ? 'popup__input-error_visible' : ''}`} id=\"email-error\">Неправильный формат email</span>\r\n        <label className='popup__input-title' htmlFor='phone'>Phone</label>\r\n        <input\r\n          onChange={validate.handleChange}\r\n          id='phone'\r\n          className='popup__input'\r\n          type='text'\r\n          name='phone'\r\n          minLength='1'\r\n          maxLength='30'\r\n          required\r\n          value={validate.values.phone || ''}\r\n          placeholder='Номер телефона в формате (___)___-____'\r\n          pattern='[(]{1}\\d{3}[)]{1}\\d{3}[-]{1}\\d{4}'\r\n        />\r\n        <span className={`popup__input-error ${(validate.errors.phone) ? 'popup__input-error_visible' : ''}`} id=\"phone-error\">Неправильный формат номера телефона</span>\r\n        <button className={`popup__submit ${(validate.isValid) ? '' : 'popup__submit_disabled'}`} disabled={(validate.isValid) ? false : true} type=\"submit\">Добавить в таблицу</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React, { useCallback } from \"react\";\r\n\r\nexport function useFormWithValidation() {\r\n  const [values, setValues] = React.useState({});\r\n  const [errors, setErrors] = React.useState({});\r\n  const [isValid, setIsValid] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setValues({...values, [name]: value});\r\n    setErrors({...errors, [name]: target.validationMessage });\r\n    setIsValid(target.closest(\"form\").checkValidity());\r\n  };\r\n\r\n  const resetForm = useCallback(\r\n    (newValues = {}, newErrors = {}, newIsValid = false) => {\r\n      setValues(newValues);\r\n      setErrors(newErrors);\r\n      setIsValid(newIsValid);\r\n    },\r\n    [setValues, setErrors, setIsValid]\r\n  );\r\n\r\n  return { values, handleChange, errors, isValid, resetForm };\r\n}","const BASE_URL = 'http://www.filltext.com';\r\n\r\nexport const getSmallData = () => {\r\n  return fetch(`${BASE_URL}/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  })\r\n  .then((res) => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return res.json().then((data) => Promise.reject(`${res.status} - ${data.message || 'Ошибка'}`));\r\n  });\r\n};\r\nexport const getLargeData = () => {\r\n  return fetch(`${BASE_URL}/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  })\r\n  .then((res) => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return res.json().then((data) => Promise.reject(`${res.status} - ${data.message || 'Ошибка'}`));\r\n  });\r\n};","import React from 'react';\nimport './App.css';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Preloader from '../Preloader/Preloader';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\nimport * as MainApi from '../../utils/MainApi';\nimport { \n  TABLE_COLUMNS,\n  defaultMethod,\n  ascMethod,\n  descMethod,\n} from '../../utils/utils';\n\nfunction App() {\n  const [dataList, setDataList] = React.useState([]);\n  const [isDisableButton, setIsDisableButton] = React.useState(false);\n  const [isPopupOpened, setIsPopupOpened] = React.useState(false);\n  const [activeNum, setActiveNum] = React.useState(1); // активный элемент навигации в таблице\n  const [pagination, setPagination] = React.useState({\n    currentPage: 1,\n    itemsPerPage: 50,\n  });\n  const [selectedCell, setSelectedCell] = React.useState({});\n  const [isPreload, setIsPreload] = React.useState(false);\n  const [isSuccess, setIsSuccess] = React.useState(true); // true - идет поиск, false - ошибка\n  const [errorMessage, setErrorMessage] = React.useState(false); // состояние ошибки для прелоудера при фильтрации\n  const [columns, setColumns] = React.useState(TABLE_COLUMNS);\n\n  function handleAddTableCell() {\n    setIsPopupOpened(true);\n  }\n  function closeAllPopups() {\n    setIsPopupOpened(false);\n  }\n  function handleSubmitPopupWithForm(values) {\n    setIsPreload(false);\n    setDataList([values, ...dataList]);\n  }\n  function defautStateSettings() {\n    let newPagination = {...pagination};\n    newPagination.currentPage = 1;\n    setPagination(newPagination);\n    setActiveNum(1);\n    setSelectedCell({});\n    setIsDisableButton(false);\n  }\n  function startPreload() {\n    setIsDisableButton(true);\n    setErrorMessage(false);\n    setIsPreload(true);\n    setIsSuccess(true);\n  }\n  function incomingError(err) {\n    setIsSuccess(false);\n    setIsDisableButton(false);\n    console.log(err);\n  }\n  function incomingData(data) {\n    setDataList(data);\n    defautStateSettings();\n    setIsPreload(false);\n  }\n  function handleGetSmallData() {\n    startPreload();\n    MainApi.getSmallData()\n      .then((res) => incomingData(res))\n      .catch((err) => incomingError(err));\n  }\n  function handleGetLargeData() {\n    startPreload();\n    MainApi.getLargeData()\n      .then((res) => incomingData(res))\n      .catch((err) => incomingError(err));\n  }\n  function handleClickNav(evt) {\n    let newPagination = {...pagination};\n    newPagination.currentPage = evt.target.id;\n    setPagination(newPagination);\n    setActiveNum(+evt.target.id);\n  }\n  function handleClickTableCell(data) {\n    setSelectedCell(data);\n  }\n  function sortDataList({label, type}, sortMethod) {\n    let sortedDataList;\n    const num = type === Number;\n\n    if (dataList.some((item) => item[label])) {\n      sortMethod === ascMethod || sortMethod === defaultMethod ?\n      sortedDataList = dataList.sort((a, b) => num ?\n      a[label] - b[label] :\n      ('' + a[label]).localeCompare(b[label]))\n      :\n      sortedDataList = dataList.sort((a, b) => num ?\n      b[label] - a[label] : \n      ('' + b[label]).localeCompare(a[label]))\n    }\n    return sortedDataList;\n  }\n  function handleSortColumn(obj, id) {\n    let currentSortMethod = defaultMethod;\n\n    switch (obj.sortMethod) {\n      case defaultMethod:\n        currentSortMethod = ascMethod;\n        break;\n      case ascMethod:\n        currentSortMethod = descMethod;\n        break;\n      case descMethod:\n        currentSortMethod = ascMethod;\n        break;\n      default:\n        currentSortMethod = ascMethod;\n    }\n\n    const changeColumn = columns.map((item, index) => ({ ...item, sortMethod: id === index ? currentSortMethod : defaultMethod }));\n    const sortedData = sortDataList(obj, currentSortMethod);\n    setDataList(sortedData);\n    setColumns(changeColumn);\n  }\n  function handleFilter(value) {\n    const res = dataList.filter(obj => Object.values(obj).some(key => typeof(key) !== 'object' ? key.toString().includes(value) : null));\n    if (res.length < 1) {\n      setIsPreload(true);\n      setIsSuccess(false);\n      setErrorMessage(true);\n    }\n    setDataList(res);\n  }\n\n  return (\n    <>\n      <Header\n        handleGetSmallData={handleGetSmallData}\n        handleGetLargeData={handleGetLargeData}\n        isDisableButton={isDisableButton}\n        handleAddTableCell={handleAddTableCell}\n      />\n      {(isPreload) ?\n        <Preloader isSuccess={isSuccess} errorMessage={errorMessage} />\n      :\n      (dataList && dataList.length > 0) ? \n        <Main \n          dataList={dataList}\n          activeNum={activeNum}\n          handleClickNav={handleClickNav}\n          pagination={pagination}\n          selectedCell={selectedCell}\n          handleClickTableCell={handleClickTableCell}\n          handleSortColumn={handleSortColumn}\n          handleFilter={handleFilter}\n          columns={columns}\n        />\n      : ''}\n      <PopupWithForm isOpen={isPopupOpened} onClose={closeAllPopups} handleSubmitPopupWithForm={handleSubmitPopupWithForm} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}